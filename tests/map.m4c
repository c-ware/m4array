/*
 * Testing of the map operation.
*/

#include "common.h"

include(template/common.m4)

void test_map() {
    char *a = (char *) malloc(16);
    char *b = (char *) malloc(16);
    char *c = (char *) malloc(16);
    char *d = (char *) malloc(16);
    char *e = (char *) malloc(16);
    char *f = (char *) malloc(16);
    struct StringArray *array = (struct StringArray *) CWUTILS_NULL;

    /* Initialize strings */
    strcpy(a, "foo"); 
    strcpy(b, "bar"); 
    strcpy(c, "baz"); 
    strcpy(d, "tuna"); 
    strcpy(e, "spam"); 
    strcpy(f, "thud"); 

    array = M4ARRAY_INIT(array, STRING_ARRAY);

    M4ARRAY_APPEND(array, a, STRING_ARRAY);
    M4ARRAY_APPEND(array, b, STRING_ARRAY);
    M4ARRAY_APPEND(array, c, STRING_ARRAY);
    M4ARRAY_APPEND(array, d, STRING_ARRAY);
    M4ARRAY_APPEND(array, e, STRING_ARRAY);
    M4ARRAY_APPEND(array, f, STRING_ARRAY);

    /* Append text to each string */
    M4ARRAY_MAP(array, `strcat($1, "_spam")');

    ASSERT_STREQ(array->contents[0], "foo_spam");
    ASSERT_STREQ(array->contents[1], "bar_spam");
    ASSERT_STREQ(array->contents[2], "baz_spam");
    ASSERT_STREQ(array->contents[3], "tuna_spam");
    ASSERT_STREQ(array->contents[4], "spam_spam");
    ASSERT_STREQ(array->contents[5], "thud_spam");

    M4ARRAY_FREE(array, STRING_ARRAY);
}

void test_map_only_applies_to_used() {
    char *a = (char *) malloc(16);
    char *b = (char *) malloc(16);
    char *c = (char *) malloc(16);
    char *d = (char *) malloc(16);
    char *e = (char *) malloc(16);
    char *f = (char *) malloc(16);
    struct StringArray *array = (struct StringArray *) CWUTILS_NULL;

    /* Initialize strings */
    strcpy(a, "foo"); 
    strcpy(b, "bar"); 
    strcpy(c, "baz"); 
    strcpy(d, "tuna"); 
    strcpy(e, "spam"); 
    strcpy(f, "thud"); 

    array = M4ARRAY_INIT(array, STRING_ARRAY);

    M4ARRAY_APPEND(array, a, STRING_ARRAY);
    M4ARRAY_APPEND(array, b, STRING_ARRAY);
    M4ARRAY_APPEND(array, c, STRING_ARRAY);
    M4ARRAY_APPEND(array, d, STRING_ARRAY);
    M4ARRAY_APPEND(array, e, STRING_ARRAY);
    M4ARRAY_APPEND(array, f, STRING_ARRAY);

    /* Only map to the first 4 strings */
    array->used = 4;

    /* Append text to each string */
    M4ARRAY_MAP(array, `strcat($1, "_spam")');

    ASSERT_STREQ(array->contents[0], "foo_spam");
    ASSERT_STREQ(array->contents[1], "bar_spam");
    ASSERT_STREQ(array->contents[2], "baz_spam");
    ASSERT_STREQ(array->contents[3], "tuna_spam");
    ASSERT_STREQ(array->contents[4], "spam");
    ASSERT_STREQ(array->contents[5], "thud");

    /* Only map to the first 3 strings */
    array->used = 3;

    /* Append text to each string */
    M4ARRAY_MAP(array, `strcat($1, "_")');

    ASSERT_STREQ(array->contents[0], "foo_spam_");
    ASSERT_STREQ(array->contents[1], "bar_spam_");
    ASSERT_STREQ(array->contents[2], "baz_spam_");
    ASSERT_STREQ(array->contents[3], "tuna_spam");
    ASSERT_STREQ(array->contents[4], "spam");
    ASSERT_STREQ(array->contents[5], "thud");

    /* Only map to the first 2 strings */
    array->used = 2;

    /* Append text to each string */
    M4ARRAY_MAP(array, `strcat($1, "s")');

    ASSERT_STREQ(array->contents[0], "foo_spam_s");
    ASSERT_STREQ(array->contents[1], "bar_spam_s");
    ASSERT_STREQ(array->contents[2], "baz_spam_");
    ASSERT_STREQ(array->contents[3], "tuna_spam");
    ASSERT_STREQ(array->contents[4], "spam");
    ASSERT_STREQ(array->contents[5], "thud");

    /* Only map to the first string */
    array->used = 1;

    /* Append text to each string */
    M4ARRAY_MAP(array, `strcat($1, "p")');

    ASSERT_STREQ(array->contents[0], "foo_spam_sp");
    ASSERT_STREQ(array->contents[1], "bar_spam_s");
    ASSERT_STREQ(array->contents[2], "baz_spam_");
    ASSERT_STREQ(array->contents[3], "tuna_spam");
    ASSERT_STREQ(array->contents[4], "spam");
    ASSERT_STREQ(array->contents[5], "thud");

    /* Don't map to any */
    array->used = 0;

    /* Append text to each string */
    M4ARRAY_MAP(array, `strcat($1, "a")');

    ASSERT_STREQ(array->contents[0], "foo_spam_sp");
    ASSERT_STREQ(array->contents[1], "bar_spam_s");
    ASSERT_STREQ(array->contents[2], "baz_spam_");
    ASSERT_STREQ(array->contents[3], "tuna_spam");
    ASSERT_STREQ(array->contents[4], "spam");
    ASSERT_STREQ(array->contents[5], "thud");

    M4ARRAY_FREE(array, STRING_ARRAY);
}

int main() {
    test_map();
    test_map_only_applies_to_used();

    return 0;
}
